/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -v -c GeoClue2Manager -p geoclue2manager_p.h:geoclue2manager.cpp org.freedesktop.GeoClue2.xml org.freedesktop.GeoClue2.Manager
 *
 * qdbusxml2cpp is Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef GEOCLUE2MANAGER_P_H_1400937813
#define GEOCLUE2MANAGER_P_H_1400937813

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.freedesktop.GeoClue2.Manager
 */
class GeoClue2Manager: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.GeoClue2.Manager"; }

public:
    GeoClue2Manager(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~GeoClue2Manager();

    Q_PROPERTY(uint AvailableAccuracyLevel READ availableAccuracyLevel)
    inline uint availableAccuracyLevel() const
    { return qvariant_cast< uint >(property("AvailableAccuracyLevel")); }

    Q_PROPERTY(bool InUse READ inUse)
    inline bool inUse() const
    { return qvariant_cast< bool >(property("InUse")); }

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> AddAgent(const QString &id)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(id);
        return asyncCallWithArgumentList(QStringLiteral("AddAgent"), argumentList);
    }

    inline QDBusPendingReply<QDBusObjectPath> GetClient()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("GetClient"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace org {
  namespace freedesktop {
    namespace GeoClue2 {
      typedef ::GeoClue2Manager Manager;
    }
  }
}
#endif
